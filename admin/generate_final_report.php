<?php
/**
 * Generate Final Approval Report PDF
 * 
 * This file generates an official PDF report for approved applications
 * Only available when both IO and LO have approved and Secretary approves
 */

require_once '../includes/config.php';
require_admin_login();

// Ensure an application ID is provided
if (!isset($_GET['id'])) {
    $_SESSION['message'] = "No application ID specified.";
    redirect('/admin/applications.php');
}

$id = $_GET['id'];
$mode = $_GET['mode'] ?? 'preview'; // Default to preview

// Fetch the application details
$stmt = $pdo->prepare("SELECT * FROM members_information WHERE id = ?");
$stmt->execute([$id]);
$application = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$application) {
    $_SESSION['message'] = "Application not found.";
    redirect('/admin/applications.php');
}

// Check if both IO and LO have approved
if ($application['io_approved'] !== 'approved' || $application['lo_approved'] !== 'approved') {
    $_SESSION['message'] = "Cannot generate final report. Both Insurance Officer and Loan Officer must approve first.";
    redirect('/admin/view_application.php?id=' . $id);
}

// Include TCPDF
require_once '../vendor/autoload.php';

class MYPDF extends TCPDF {
    // Page header
    public function Header() {
        // Logo
        if (file_exists('../assets/images/logo.png')) {
            $this->Image('../assets/images/logo.png', 10, 10, 30, '', 'PNG');
        }
        
        // Add some space before the title
        $this->Ln(10);
        
        // Set font
        $this->SetFont('helvetica', 'B', 15);
        
        // Title
        $this->Cell(0, 15, 'TSPI MEMBERSHIP APPLICATION', 0, false, 'C', 0, '', 0, false, 'M', 'M');
        
        // Line break - reduced to bring content up
        $this->Ln(15);
    }

    // Page footer
    public function Footer() {
        // Position at 15 mm from bottom
        $this->SetY(-20);
        
        // Set font
        $this->SetFont('helvetica', 'I', 8);
        
        // Add confirmation statement
        $this->MultiCell(0, 4, 'This document serves as the official confirmation of membership approval. The member is now entitled to all benefits and privileges associated with their selected plan(s). This report was generated by the TSPI Membership Management System and is considered valid without alterations.', 0, 'L', 0);
        
        // Page number
        $this->SetY(-8);
        $this->Cell(0, 5, 'Page '.$this->getAliasNumPage().'/'.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');
        
        // Add timestamp
        $this->SetX(15);
        $this->Cell(0, 5, 'Generated on: ' . date('Y-m-d H:i:s'), 0, false, 'L', 0, '', 0, false, 'T', 'M');
    }
}

// Create new PDF document
$pdf = new MYPDF('P', 'mm', 'A4', true, 'UTF-8', false);

// Set document information
$pdf->SetCreator('TSPI CMS');
$pdf->SetAuthor('TSPI Admin');
$pdf->SetTitle('Final Approval Report - ' . $application['first_name'] . ' ' . $application['last_name']);
$pdf->SetSubject('Membership Application Final Approval');

// Set margins
$pdf->SetMargins(15, 30, 15);
$pdf->SetHeaderMargin(5);
$pdf->SetFooterMargin(20);
$pdf->SetAutoPageBreak(TRUE, 25);

// Add a page
$pdf->AddPage();

// Set font for report title
$pdf->SetFont('helvetica', 'B', 12);
$pdf->Cell(180, 10, 'MEMBERSHIP APPROVAL CONFIRMATION', 0, 1, 'C');
$pdf->SetDrawColor(0, 0, 0);
$pdf->Line(15, $pdf->GetY(), 195, $pdf->GetY());
$pdf->Ln(10);

// Prepare data for the report
$plans = json_decode($application['plans'], true) ?: [];
$classification = json_decode($application['classification'], true) ?: [];
$fullName = $application['first_name'] . ' ' . $application['middle_name'] . ' ' . $application['last_name'];

// Start with a verbal confirmation paragraph
$pdf->SetFont('helvetica', '', 10);
$pdf->MultiCell(180, 6, 'This document certifies that the TSPI membership application for ' . $fullName . ' with CID Number ' . $application['cid_no'] . ' has been thoroughly reviewed and APPROVED by all required officers. The applicant has been enrolled in the following plan(s): ' . implode(', ', $plans) . ' under the classification of ' . implode(', ', $classification) . '.', 0, 'L', 0);
$pdf->Ln(5);

// Application status confirmation
$pdf->SetFont('helvetica', 'B', 11);
$pdf->Cell(180, 8, 'APPLICATION STATUS: ' . strtoupper($application['status']), 0, 1, 'L');
$pdf->SetFont('helvetica', '', 10);
$pdf->MultiCell(180, 6, 'The application has successfully completed all required approval stages in accordance with TSPI policies and procedures.', 0, 'L', 0);
$pdf->Ln(5);

// Beneficiaries section - only if beneficiaries exist
$hasBeneficiaries = false;
for ($i = 1; $i <= 5; $i++) {
    if (!empty($application["beneficiary_fn_{$i}"])) {
        $hasBeneficiaries = true;
        break;
    }
}

if ($hasBeneficiaries) {
    $pdf->SetFont('helvetica', 'B', 11);
    $pdf->Cell(180, 8, 'DESIGNATED BENEFICIARIES:', 0, 1, 'L');
    $pdf->SetFont('helvetica', '', 10);
    
    $beneficiaryText = '';
    for ($i = 1; $i <= 5; $i++) {
        if (!empty($application["beneficiary_fn_{$i}"])) {
            $fullBeneficiaryName = $application["beneficiary_fn_{$i}"] . ' ' . 
                                ($application["beneficiary_mi_{$i}"] ? $application["beneficiary_mi_{$i}"] . '. ' : '') . 
                                $application["beneficiary_ln_{$i}"];
            $relationship = $application["beneficiary_relationship_{$i}"] ?: 'Unspecified';
            $beneficiaryText .= 'â€¢ ' . $fullBeneficiaryName . ' (' . $relationship . ')';
            $beneficiaryText .= ($application["beneficiary_dependent_{$i}"]) ? ' - Dependent' : '';
            $beneficiaryText .= "\n";
        }
    }
    
    $pdf->MultiCell(180, 6, $beneficiaryText, 0, 'L', 0);
    $pdf->Ln(5);
}

// Approval confirmation
$pdf->SetFont('helvetica', 'B', 11);
$pdf->Cell(180, 8, 'APPROVAL CONFIRMATIONS:', 0, 1, 'L');
$pdf->SetFont('helvetica', '', 10);

// Format all approvals in a more structured way with consistent spacing
$pdf->SetCellPadding(2);

// Insurance Officer Approval
$ioApprovalDate = date('F j, Y', strtotime($application['io_approval_date']));
$pdf->Cell(50, 6, 'Insurance Officer:', 0, 0, 'L');
$pdf->Cell(130, 6, "{$application['io_name']}", 0, 1, 'L');
$pdf->Cell(50, 6, 'Approval Date:', 0, 0, 'L');
$pdf->Cell(130, 6, "{$ioApprovalDate}", 0, 1, 'L');
$pdf->Ln(2);

// Loan Officer Approval
$loApprovalDate = date('F j, Y', strtotime($application['lo_approval_date']));
$pdf->Cell(50, 6, 'Loan Officer:', 0, 0, 'L');
$pdf->Cell(130, 6, "{$application['lo_name']}", 0, 1, 'L');
$pdf->Cell(50, 6, 'Approval Date:', 0, 0, 'L');
$pdf->Cell(130, 6, "{$loApprovalDate}", 0, 1, 'L');
$pdf->Ln(2);

// Secretary Approval
$secretaryName = $application['secretary_name'] ?: '[Pending]';
$secretaryDate = ($application['secretary_approval_date']) ? date('F j, Y', strtotime($application['secretary_approval_date'])) : '[Pending]';
$pdf->Cell(50, 6, 'Secretary:', 0, 0, 'L');
$pdf->Cell(130, 6, "{$secretaryName}", 0, 1, 'L');
$pdf->Cell(50, 6, 'Final Approval Date:', 0, 0, 'L');
$pdf->Cell(130, 6, "{$secretaryDate}", 0, 1, 'L');

// Reset padding
$pdf->SetCellPadding(0);

$pdf->Ln(35);

// Final confirmation and signatures section
$pdf->SetFont('helvetica', 'B', 11);
$pdf->Cell(180, 8, 'OFFICIAL SIGNATURES:', 0, 1, 'L');
$pdf->Ln(5);

// Create signature grid (3 columns)
$x = $pdf->GetX();
$y = $pdf->GetY();
$signatureWidth = 58;
$signatureHeight = 25;
$gap = 3;

// Insurance Officer Signature
if (!empty($application['io_signature'])) {
    // Use actual signature if available
    $signaturePath = '../' . $application['io_signature'];
    if (file_exists($signaturePath)) {
        $pdf->Image($signaturePath, $x, $y, $signatureWidth, '', '', '', '', false, 300);
    }
}
$pdf->Line($x, $y + $signatureHeight - 5, $x + $signatureWidth, $y + $signatureHeight - 5);
$pdf->SetXY($x, $y + $signatureHeight);
$pdf->SetFont('helvetica', '', 8);
$pdf->Cell($signatureWidth, 5, $application['io_name'], 0, 0, 'C');
$pdf->SetXY($x, $y + $signatureHeight + 5);
$pdf->Cell($signatureWidth, 5, 'Insurance Officer', 0, 0, 'C');

// Loan Officer Signature
$x += $signatureWidth + $gap;
if (!empty($application['lo_signature'])) {
    // Use actual signature if available
    $signaturePath = '../' . $application['lo_signature'];
    if (file_exists($signaturePath)) {
        $pdf->Image($signaturePath, $x, $y, $signatureWidth, '', '', '', '', false, 300);
    }
}
$pdf->Line($x, $y + $signatureHeight - 5, $x + $signatureWidth, $y + $signatureHeight - 5);
$pdf->SetXY($x, $y + $signatureHeight);
$pdf->Cell($signatureWidth, 5, $application['lo_name'], 0, 0, 'C');
$pdf->SetXY($x, $y + $signatureHeight + 5);
$pdf->Cell($signatureWidth, 5, 'Loan Officer', 0, 0, 'C');

// Secretary Signature
$x += $signatureWidth + $gap;
if (!empty($application['secretary_signature'])) {
    // Use actual signature if available
    $signaturePath = '../' . $application['secretary_signature'];
    if (file_exists($signaturePath)) {
        $pdf->Image($signaturePath, $x, $y, $signatureWidth, '', '', '', '', false, 300);
    }
}
$pdf->Line($x, $y + $signatureHeight - 5, $x + $signatureWidth, $y + $signatureHeight - 5);
$pdf->SetXY($x, $y + $signatureHeight);
$pdf->Cell($signatureWidth, 5, $application['secretary_name'] ?: '[Pending]', 0, 0, 'C');
$pdf->SetXY($x, $y + $signatureHeight + 5);
$pdf->Cell($signatureWidth, 5, 'Secretary', 0, 0, 'C');

$pdf->Ln(35);

// Output the PDF
$filename = 'TSPI_Final_Approval_' . $application['id'] . '_' . date('Ymd') . '.pdf';

if ($mode === 'download') {
    // Output as download
    $pdf->Output($filename, 'D');
} else {
    // Output inline (preview in browser)
    $pdf->Output($filename, 'I');
}
exit; 